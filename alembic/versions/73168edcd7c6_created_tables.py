"""created tables

Revision ID: 73168edcd7c6
Revises: 
Create Date: 2025-03-18 21:56:30.510305

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '73168edcd7c6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('police_stations',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('contact_number', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('established_date', sa.Date(), nullable=True),
    sa.Column('ocs_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['ocs_id'], ['police_officers.id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('officer_disciplinary_actions')
    op.add_column('evidence', sa.Column('collection_location', sa.String(length=255), nullable=False))
    op.add_column('evidence', sa.Column('collected_by', sa.String(length=255), nullable=False))
    op.add_column('evidence', sa.Column('chain_of_custody', sa.Text(), nullable=False))
    op.add_column('evidence', sa.Column('storage_location', sa.String(length=255), nullable=False))
    op.add_column('evidence', sa.Column('file_url', sa.String(length=255), nullable=True))
    op.alter_column('evidence', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_column('evidence', 'custodian')
    op.drop_column('evidence', 'location')
    op.drop_column('evidence', 'url')
    op.drop_column('evidence', 'notes')
    op.add_column('incident_reports', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('incident_reports', sa.Column('incident_datetime', sa.DateTime(), nullable=False))
    op.add_column('incident_reports', sa.Column('report_datetime', sa.DateTime(), nullable=False))
    op.add_column('incident_reports', sa.Column('gps_coordinates', sa.String(length=100), nullable=True))
    op.add_column('incident_reports', sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='incidentseverity'), nullable=False))
    op.add_column('incident_reports', sa.Column('status', sa.Enum('REPORTED', 'UNDER_INVESTIGATION', 'PENDING_REVIEW', 'CLOSED', 'REFERRED', 'REOPENED', name='incidentstatus'), nullable=False))
    op.add_column('incident_reports', sa.Column('victims', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('suspects', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('property_involved', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('estimated_damages', sa.Float(), nullable=True))
    op.add_column('incident_reports', sa.Column('weapons_involved', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('injuries', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('case_opened', sa.Boolean(), nullable=False))
    op.add_column('incident_reports', sa.Column('case_number', sa.String(length=50), nullable=True))
    op.add_column('incident_reports', sa.Column('follow_up_actions', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('follow_up_date', sa.Date(), nullable=True))
    op.add_column('incident_reports', sa.Column('resolution_details', sa.Text(), nullable=True))
    op.add_column('incident_reports', sa.Column('resolution_date', sa.Date(), nullable=True))
    op.add_column('incident_reports', sa.Column('reporting_officer_id', sa.Integer(), nullable=False))
    op.add_column('incident_reports', sa.Column('supervisor_id', sa.Integer(), nullable=True))
    op.add_column('incident_reports', sa.Column('station_id', sa.Integer(), nullable=False))
    op.alter_column('incident_reports', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.drop_constraint('incident_reports_officer_id_fkey', 'incident_reports', type_='foreignkey')
    op.create_foreign_key(None, 'incident_reports', 'police_stations', ['station_id'], ['id'])
    op.create_foreign_key(None, 'incident_reports', 'police_officers', ['supervisor_id'], ['id'])
    op.create_foreign_key(None, 'incident_reports', 'police_officers', ['reporting_officer_id'], ['id'])
    op.drop_column('incident_reports', 'incident_date')
    op.drop_column('incident_reports', 'suspect_id_number')
    op.drop_column('incident_reports', 'officer_id')
    op.drop_column('incident_reports', 'suspect_name')
    op.drop_column('incident_reports', 'suspect_contact')
    op.drop_column('incident_reports', 'attachments')
    op.add_column('police_complaints', sa.Column('reference_number', sa.String(length=50), nullable=False))
    op.add_column('police_complaints', sa.Column('subject', sa.String(length=255), nullable=False))
    op.add_column('police_complaints', sa.Column('submission_date', sa.DateTime(), nullable=False))
    op.add_column('police_complaints', sa.Column('incident_date', sa.DateTime(), nullable=False))
    op.add_column('police_complaints', sa.Column('location', sa.String(length=255), nullable=False))
    op.add_column('police_complaints', sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='complaintpriority'), nullable=False))
    op.add_column('police_complaints', sa.Column('anonymous', sa.Boolean(), nullable=False))
    op.add_column('police_complaints', sa.Column('witnesses', sa.Text(), nullable=True))
    op.add_column('police_complaints', sa.Column('evidence_description', sa.Text(), nullable=True))
    op.add_column('police_complaints', sa.Column('assigned_to', sa.Integer(), nullable=True))
    op.add_column('police_complaints', sa.Column('assignment_date', sa.DateTime(), nullable=True))
    op.add_column('police_complaints', sa.Column('resolution_details', sa.Text(), nullable=True))
    op.add_column('police_complaints', sa.Column('resolution_date', sa.DateTime(), nullable=True))
    op.add_column('police_complaints', sa.Column('rejection_reason', sa.Text(), nullable=True))
    op.add_column('police_complaints', sa.Column('escalation_reason', sa.Text(), nullable=True))
    op.alter_column('police_complaints', 'description',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=False)
    op.alter_column('police_complaints', 'officer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint('police_complaints_complaint_number_key', 'police_complaints', type_='unique')
    op.create_unique_constraint(None, 'police_complaints', ['reference_number'])
    op.drop_constraint('police_complaints_incident_id_fkey', 'police_complaints', type_='foreignkey')
    op.create_foreign_key(None, 'police_complaints', 'police_officers', ['assigned_to'], ['id'])
    op.drop_column('police_complaints', 'incident_id')
    op.drop_column('police_complaints', 'attachments')
    op.drop_column('police_complaints', 'complaint_number')
    op.drop_column('police_complaints', 'allegation')
    op.drop_column('police_complaints', 'complaint_date')
    op.add_column('police_investigations', sa.Column('case_number', sa.String(length=50), nullable=False))
    op.add_column('police_investigations', sa.Column('title', sa.String(length=255), nullable=False))
    op.add_column('police_investigations', sa.Column('description', sa.Text(), nullable=False))
    op.add_column('police_investigations', sa.Column('action_taken', sa.Text(), nullable=True))
    op.add_column('police_investigations', sa.Column('lead_investigator_id', sa.Integer(), nullable=False))
    op.alter_column('police_investigations', 'findings',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('police_investigations', 'recommendations',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               existing_nullable=True)
    op.drop_constraint('police_investigations_complaint_id_key', 'police_investigations', type_='unique')
    op.drop_constraint('police_investigations_investigation_number_key', 'police_investigations', type_='unique')
    op.create_unique_constraint(None, 'police_investigations', ['case_number'])
    op.drop_constraint('police_investigations_officer_id_fkey', 'police_investigations', type_='foreignkey')
    op.create_foreign_key(None, 'police_investigations', 'police_officers', ['lead_investigator_id'], ['id'])
    op.drop_column('police_investigations', 'investigation_number')
    op.drop_column('police_investigations', 'officer_id')
    op.drop_column('police_investigations', 'investigator_contact')
    op.drop_column('police_investigations', 'evidence')
    op.drop_column('police_investigations', 'investigator_name')
    op.add_column('police_officers', sa.Column('service_number', sa.String(length=50), nullable=False))
    op.add_column('police_officers', sa.Column('gender', sa.String(length=20), nullable=False))
    op.add_column('police_officers', sa.Column('national_id', sa.String(length=20), nullable=False))
    op.add_column('police_officers', sa.Column('email', sa.String(length=255), nullable=False))
    op.add_column('police_officers', sa.Column('phone_number', sa.String(length=20), nullable=False))
    op.add_column('police_officers', sa.Column('physical_address', sa.Text(), nullable=False))
    op.add_column('police_officers', sa.Column('date_of_enlistment', sa.Date(), nullable=False))
    op.add_column('police_officers', sa.Column('station_id', sa.Integer(), nullable=True))
    op.add_column('police_officers', sa.Column('department', sa.String(length=255), nullable=True))
    op.add_column('police_officers', sa.Column('supervisor_id', sa.Integer(), nullable=True))
    op.add_column('police_officers', sa.Column('status', sa.String(length=50), nullable=False))
    op.add_column('police_officers', sa.Column('firearm_serial', sa.String(length=100), nullable=True))
    op.add_column('police_officers', sa.Column('last_promotion_date', sa.Date(), nullable=True))
    op.alter_column('police_officers', 'rank',
               existing_type=postgresql.ENUM('CONSTABLE', 'CORPORAL', 'SERGEANT', 'INSPECTOR', 'CHIEF_INSPECTOR', 'SUPERINTENDENT', 'SENIOR_SUPERINTENDENT', 'COMMISSIONER', 'SENIOR_COMMISSIONER', 'ASSISTANT_INSPECTOR_GENERAL', 'DEPUTY_INSPECTOR_GENERAL', 'INSPECTOR_GENERAL', name='policerank'),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_constraint('police_officers_badge_number_key', 'police_officers', type_='unique')
    op.drop_constraint('police_officers_officer_number_key', 'police_officers', type_='unique')
    op.create_unique_constraint(None, 'police_officers', ['service_number'])
    op.create_unique_constraint(None, 'police_officers', ['national_id'])
    op.create_foreign_key(None, 'police_officers', 'police_officers', ['supervisor_id'], ['id'])
    op.create_foreign_key(None, 'police_officers', 'police_stations', ['station_id'], ['id'])
    op.drop_column('police_officers', 'precinct')
    op.drop_column('police_officers', 'hire_date')
    op.drop_column('police_officers', 'is_active')
    op.drop_column('police_officers', 'officer_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('police_officers', sa.Column('officer_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('police_officers', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('police_officers', sa.Column('hire_date', sa.DATE(), autoincrement=False, nullable=False))
    op.add_column('police_officers', sa.Column('precinct', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'police_officers', type_='foreignkey')
    op.drop_constraint(None, 'police_officers', type_='foreignkey')
    op.drop_constraint(None, 'police_officers', type_='unique')
    op.drop_constraint(None, 'police_officers', type_='unique')
    op.create_unique_constraint('police_officers_officer_number_key', 'police_officers', ['officer_number'])
    op.create_unique_constraint('police_officers_badge_number_key', 'police_officers', ['badge_number'])
    op.alter_column('police_officers', 'rank',
               existing_type=sa.String(length=100),
               type_=postgresql.ENUM('CONSTABLE', 'CORPORAL', 'SERGEANT', 'INSPECTOR', 'CHIEF_INSPECTOR', 'SUPERINTENDENT', 'SENIOR_SUPERINTENDENT', 'COMMISSIONER', 'SENIOR_COMMISSIONER', 'ASSISTANT_INSPECTOR_GENERAL', 'DEPUTY_INSPECTOR_GENERAL', 'INSPECTOR_GENERAL', name='policerank'),
               existing_nullable=False)
    op.drop_column('police_officers', 'last_promotion_date')
    op.drop_column('police_officers', 'firearm_serial')
    op.drop_column('police_officers', 'status')
    op.drop_column('police_officers', 'supervisor_id')
    op.drop_column('police_officers', 'department')
    op.drop_column('police_officers', 'station_id')
    op.drop_column('police_officers', 'date_of_enlistment')
    op.drop_column('police_officers', 'physical_address')
    op.drop_column('police_officers', 'phone_number')
    op.drop_column('police_officers', 'email')
    op.drop_column('police_officers', 'national_id')
    op.drop_column('police_officers', 'gender')
    op.drop_column('police_officers', 'service_number')
    op.add_column('police_investigations', sa.Column('investigator_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('police_investigations', sa.Column('evidence', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('police_investigations', sa.Column('investigator_contact', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('police_investigations', sa.Column('officer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('police_investigations', sa.Column('investigation_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'police_investigations', type_='foreignkey')
    op.create_foreign_key('police_investigations_officer_id_fkey', 'police_investigations', 'police_officers', ['officer_id'], ['id'])
    op.drop_constraint(None, 'police_investigations', type_='unique')
    op.create_unique_constraint('police_investigations_investigation_number_key', 'police_investigations', ['investigation_number'])
    op.create_unique_constraint('police_investigations_complaint_id_key', 'police_investigations', ['complaint_id'])
    op.alter_column('police_investigations', 'recommendations',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('police_investigations', 'findings',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('police_investigations', 'lead_investigator_id')
    op.drop_column('police_investigations', 'action_taken')
    op.drop_column('police_investigations', 'description')
    op.drop_column('police_investigations', 'title')
    op.drop_column('police_investigations', 'case_number')
    op.add_column('police_complaints', sa.Column('complaint_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('police_complaints', sa.Column('allegation', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('police_complaints', sa.Column('complaint_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.add_column('police_complaints', sa.Column('attachments', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('police_complaints', sa.Column('incident_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'police_complaints', type_='foreignkey')
    op.create_foreign_key('police_complaints_incident_id_fkey', 'police_complaints', 'incident_reports', ['incident_id'], ['id'])
    op.drop_constraint(None, 'police_complaints', type_='unique')
    op.create_unique_constraint('police_complaints_complaint_number_key', 'police_complaints', ['complaint_number'])
    op.alter_column('police_complaints', 'officer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('police_complaints', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('police_complaints', 'escalation_reason')
    op.drop_column('police_complaints', 'rejection_reason')
    op.drop_column('police_complaints', 'resolution_date')
    op.drop_column('police_complaints', 'resolution_details')
    op.drop_column('police_complaints', 'assignment_date')
    op.drop_column('police_complaints', 'assigned_to')
    op.drop_column('police_complaints', 'evidence_description')
    op.drop_column('police_complaints', 'witnesses')
    op.drop_column('police_complaints', 'anonymous')
    op.drop_column('police_complaints', 'priority')
    op.drop_column('police_complaints', 'location')
    op.drop_column('police_complaints', 'incident_date')
    op.drop_column('police_complaints', 'submission_date')
    op.drop_column('police_complaints', 'subject')
    op.drop_column('police_complaints', 'reference_number')
    op.add_column('incident_reports', sa.Column('attachments', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('incident_reports', sa.Column('suspect_contact', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('incident_reports', sa.Column('suspect_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('incident_reports', sa.Column('officer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('incident_reports', sa.Column('suspect_id_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('incident_reports', sa.Column('incident_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'incident_reports', type_='foreignkey')
    op.drop_constraint(None, 'incident_reports', type_='foreignkey')
    op.drop_constraint(None, 'incident_reports', type_='foreignkey')
    op.create_foreign_key('incident_reports_officer_id_fkey', 'incident_reports', 'police_officers', ['officer_id'], ['id'])
    op.alter_column('incident_reports', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('incident_reports', 'station_id')
    op.drop_column('incident_reports', 'supervisor_id')
    op.drop_column('incident_reports', 'reporting_officer_id')
    op.drop_column('incident_reports', 'resolution_date')
    op.drop_column('incident_reports', 'resolution_details')
    op.drop_column('incident_reports', 'follow_up_date')
    op.drop_column('incident_reports', 'follow_up_actions')
    op.drop_column('incident_reports', 'case_number')
    op.drop_column('incident_reports', 'case_opened')
    op.drop_column('incident_reports', 'injuries')
    op.drop_column('incident_reports', 'weapons_involved')
    op.drop_column('incident_reports', 'estimated_damages')
    op.drop_column('incident_reports', 'property_involved')
    op.drop_column('incident_reports', 'suspects')
    op.drop_column('incident_reports', 'victims')
    op.drop_column('incident_reports', 'status')
    op.drop_column('incident_reports', 'severity')
    op.drop_column('incident_reports', 'gps_coordinates')
    op.drop_column('incident_reports', 'report_datetime')
    op.drop_column('incident_reports', 'incident_datetime')
    op.drop_column('incident_reports', 'title')
    op.add_column('evidence', sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('evidence', sa.Column('url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('evidence', sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('evidence', sa.Column('custodian', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.alter_column('evidence', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('evidence', 'file_url')
    op.drop_column('evidence', 'storage_location')
    op.drop_column('evidence', 'chain_of_custody')
    op.drop_column('evidence', 'collected_by')
    op.drop_column('evidence', 'collection_location')
    op.create_table('officer_disciplinary_actions',
    sa.Column('action_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('action_type', postgresql.ENUM('WARNING', 'SUSPENSION', 'DEMOTION', 'TERMINATION', 'OTHER', name='disciplinaryactiontype'), autoincrement=False, nullable=False),
    sa.Column('action_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('sanctions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('appeal_filed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('appeal_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('appeal_outcome', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('officer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('investigation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='officer_disciplinary_actions_created_by_fkey'),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name='officer_disciplinary_actions_deleted_by_fkey'),
    sa.ForeignKeyConstraint(['investigation_id'], ['police_investigations.id'], name='officer_disciplinary_actions_investigation_id_fkey'),
    sa.ForeignKeyConstraint(['officer_id'], ['police_officers.id'], name='officer_disciplinary_actions_officer_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='officer_disciplinary_actions_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='officer_disciplinary_actions_pkey'),
    sa.UniqueConstraint('action_number', name='officer_disciplinary_actions_action_number_key'),
    sa.UniqueConstraint('investigation_id', name='officer_disciplinary_actions_investigation_id_key')
    )
    op.drop_table('police_stations')
    # ### end Alembic commands ###
