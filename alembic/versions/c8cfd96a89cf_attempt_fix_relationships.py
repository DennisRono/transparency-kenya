"""attempt fix relationships

Revision ID: c8cfd96a89cf
Revises: 
Create Date: 2025-03-19 19:24:01.323727

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa



revision: str = 'c8cfd96a89cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    
    
    
    op.create_table('positions',
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('salary_grade', sa.String(length=50), nullable=False),
        sa.Column('min_salary', sa.Float(), nullable=False),
        sa.Column('max_salary', sa.Float(), nullable=False),
        sa.Column('job_level', sa.Integer(), nullable=False),
        sa.Column('responsibilities', sa.Text(), nullable=False),
        sa.Column('qualifications_required', sa.Text(), nullable=False),
        sa.Column('experience_required', sa.String(length=255), nullable=False),
        sa.Column('skills_required', sa.Text(), nullable=False),
        sa.Column('reporting_to', sa.String(length=255), nullable=True),
        sa.Column('is_management', sa.Boolean(), nullable=False),
        sa.Column('is_executive', sa.Boolean(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    
    op.create_table('roles',
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('permissions', sa.Text(), nullable=False),
        sa.Column('is_system_role', sa.Boolean(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    
    op.create_table('compliance_requirements',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('requirement_type', sa.String(length=100), nullable=False),
        sa.Column('source', sa.String(length=255), nullable=False),
        sa.Column('reference_number', sa.String(length=100), nullable=True),
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('expiry_date', sa.Date(), nullable=True),
        sa.Column('compliance_criteria', sa.Text(), nullable=False),
        sa.Column('verification_method', sa.Text(), nullable=False),
        sa.Column('reporting_frequency', sa.String(length=50), nullable=False),
        sa.Column('responsible_role', sa.String(length=255), nullable=False),
        sa.Column('oversight_authority', sa.String(length=255), nullable=False),
        sa.Column('penalties_for_non_compliance', sa.Text(), nullable=True),
        sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_requirements_id'), 'compliance_requirements', ['id'], unique=False)
    
    
    op.create_table('employees',
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('middle_name', sa.String(length=100), nullable=True),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'PREFER_NOT_TO_SAY', name='gender'), nullable=False),
        sa.Column('date_of_birth', sa.Date(), nullable=False),
        sa.Column('national_id', sa.String(length=20), nullable=False),
        sa.Column('passport_number', sa.String(length=20), nullable=True),
        sa.Column('tax_id', sa.String(length=20), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('personal_email', sa.String(length=255), nullable=True),
        sa.Column('phone_number', sa.String(length=20), nullable=False),
        sa.Column('alternative_phone', sa.String(length=20), nullable=True),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('postal_address', sa.String(length=100), nullable=True),
        sa.Column('marital_status', sa.Enum('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED', 'SEPARATED', name='maritalstatus'), nullable=False),
        sa.Column('nationality', sa.String(length=100), nullable=False),
        sa.Column('ethnicity', sa.String(length=100), nullable=True),
        sa.Column('religion', sa.String(length=100), nullable=True),
        sa.Column('blood_group', sa.String(length=10), nullable=True),
        sa.Column('disability', sa.Text(), nullable=True),
        sa.Column('profile_photo', sa.String(length=255), nullable=True),
        sa.Column('employee_number', sa.String(length=50), nullable=False),
        sa.Column('hire_date', sa.Date(), nullable=False),
        sa.Column('confirmation_date', sa.Date(), nullable=True),
        sa.Column('contract_end_date', sa.Date(), nullable=True),
        sa.Column('status', sa.Enum('ACTIVE', 'SUSPENDED', 'TERMINATED', 'ON_LEAVE', 'PROBATION', 'RETIRED', 'RESIGNED', 'DECEASED', name='employmentstatus'), nullable=False),
        sa.Column('employment_type', sa.String(length=50), nullable=False),
        sa.Column('probation_period_months', sa.Integer(), nullable=True),
        sa.Column('notice_period_days', sa.Integer(), nullable=True),
        sa.Column('termination_date', sa.Date(), nullable=True),
        sa.Column('termination_reason', sa.Text(), nullable=True),
        sa.Column('resignation_date', sa.Date(), nullable=True),
        sa.Column('resignation_reason', sa.Text(), nullable=True),
        sa.Column('retirement_date', sa.Date(), nullable=True),
        sa.Column('years_of_service', sa.Float(), nullable=True),
        sa.Column('bank_name', sa.String(length=255), nullable=False),
        sa.Column('bank_branch', sa.String(length=255), nullable=False),
        sa.Column('account_number', sa.String(length=50), nullable=False),
        sa.Column('position_id', sa.UUID(), nullable=False),
        sa.Column('supervisor_id', sa.UUID(), nullable=True),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('sub_county_id', sa.UUID(), nullable=True),
        sa.Column('ward_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
        sa.ForeignKeyConstraint(['supervisor_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['agency_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['county_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['sub_county_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['ward_id'], ['employees.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('employee_number'),
        sa.UniqueConstraint('national_id'),
        sa.UniqueConstraint('passport_number'),
        sa.UniqueConstraint('tax_id')
    )
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    
    op.create_table('users',
        sa.Column('username', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('password_hash', sa.String(length=255), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_locked', sa.Boolean(), nullable=False),
        sa.Column('lock_reason', sa.Text(), nullable=True),
        sa.Column('password_reset_required', sa.Boolean(), nullable=False),
        sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
        sa.Column('last_password_change', sa.DateTime(timezone=True), nullable=True),
        sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
        sa.Column('activation_token', sa.String(length=255), nullable=True),
        sa.Column('activation_token_expiry', sa.DateTime(timezone=True), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('role_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('employee_id'),
        sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    
    
    op.create_table('ministries',
        sa.Column('name', sa.String(length=255), nullable=False, unique=True),
        sa.Column('code', sa.String(length=50), nullable=False, unique=True),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('mission', sa.Text(), nullable=False),
        sa.Column('vision', sa.Text(), nullable=False),
        sa.Column('functions', sa.Text(), nullable=False),
        sa.Column('establishment_date', sa.Date(), nullable=False),
        sa.Column('website', sa.String(length=255), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('postal_address', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False, default=True),
        sa.Column('minister_id', sa.UUID(), nullable=True),
        sa.Column('permanent_secretary_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['minister_id'], ['employees.id'], name='fk_ministry_minister', use_alter=True),
        sa.ForeignKeyConstraint(['permanent_secretary_id'], ['employees.id'], name='fk_ministry_permanent_secretary', use_alter=True),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ministries_id'), 'ministries', ['id'], unique=False)
    
    
    op.create_table('departments',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('functions', sa.Text(), nullable=False),
        sa.Column('establishment_date', sa.Date(), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('ministry_id', sa.UUID(), nullable=False),
        sa.Column('director_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['director_id'], ['employees.id'], name='fk_department_director', use_alter=True),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    
    
    op.create_table('counties',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('region', sa.String(length=100), nullable=False),
        sa.Column('capital', sa.String(length=100), nullable=False),
        sa.Column('area', sa.Float(), nullable=False),
        sa.Column('population', sa.Integer(), nullable=False),
        sa.Column('website', sa.String(length=255), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('postal_address', sa.String(length=100), nullable=False),
        sa.Column('governor_id', sa.UUID(), nullable=True),
        sa.Column('deputy_governor_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deputy_governor_id'], ['employees.id'], name='fk_county_deputy_governor', use_alter=True),
        sa.ForeignKeyConstraint(['governor_id'], ['employees.id'], name='fk_county_governor', use_alter=True),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_counties_id'), 'counties', ['id'], unique=False)
    
    
    op.create_table('sub_counties',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('area', sa.Float(), nullable=True),
        sa.Column('population', sa.Integer(), nullable=True),
        sa.Column('headquarters', sa.String(length=100), nullable=False),
        sa.Column('county_id', sa.UUID(), nullable=False),
        sa.Column('administrator_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['administrator_id'], ['employees.id'], name='fk_subcounty_administrator', use_alter=True),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_sub_counties_id'), 'sub_counties', ['id'], unique=False)
    
    
    op.create_table('wards',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('area', sa.Float(), nullable=True),
        sa.Column('population', sa.Integer(), nullable=True),
        sa.Column('sub_county_id', sa.UUID(), nullable=False),
        sa.Column('administrator_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['administrator_id'], ['employees.id'], name='fk_ward_administrator', use_alter=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['sub_county_id'], ['sub_counties.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_wards_id'), 'wards', ['id'], unique=False)
    
    
    op.create_table('agencies',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('mission', sa.Text(), nullable=False),
        sa.Column('vision', sa.Text(), nullable=False),
        sa.Column('functions', sa.Text(), nullable=False),
        sa.Column('establishment_date', sa.Date(), nullable=False),
        sa.Column('legal_mandate', sa.Text(), nullable=False),
        sa.Column('website', sa.String(length=255), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('postal_address', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('ceo_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['ceo_id'], ['employees.id'], name='fk_agency_ceo', use_alter=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_agencies_id'), 'agencies', ['id'], unique=False)
    
    
    op.create_foreign_key(None, 'employees', 'ministries', ['ministry_id'], ['id'])
    op.create_foreign_key(None, 'employees', 'departments', ['department_id'], ['id'])
    op.create_foreign_key(None, 'employees', 'agencies', ['agency_id'], ['id'])
    op.create_foreign_key(None, 'employees', 'counties', ['county_id'], ['id'])
    op.create_foreign_key(None, 'employees', 'sub_counties', ['sub_county_id'], ['id'])
    op.create_foreign_key(None, 'employees', 'wards', ['ward_id'], ['id'])

    op.create_table('divisions',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('code', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('functions', sa.Text(), nullable=False),
        sa.Column('establishment_date', sa.Date(), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone', sa.String(length=20), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('department_id', sa.UUID(), nullable=False),
        sa.Column('head_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['head_id'], ['employees.id'], name='fk_division_head', use_alter=True),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('code')
    )
    op.create_index(op.f('ix_divisions_id'), 'divisions', ['id'], unique=False)
    
    
    op.create_table('police_stations',
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=True),
        sa.Column('contact_number', sa.String(length=20), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('address', sa.Text(), nullable=True),
        sa.Column('established_date', sa.Date(), nullable=True),
        sa.Column('ocs_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_police_stations_id'), 'police_stations', ['id'], unique=False)
    
    
    op.create_table('police_officers',
        sa.Column('service_number', sa.String(length=50), nullable=False),
        sa.Column('rank', sa.String(length=100), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('middle_name', sa.String(length=100), nullable=True),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('gender', sa.String(length=20), nullable=False),
        sa.Column('date_of_birth', sa.Date(), nullable=False),
        sa.Column('national_id', sa.String(length=20), nullable=False),
        sa.Column('email', sa.String(length=255), nullable=False),
        sa.Column('phone_number', sa.String(length=20), nullable=False),
        sa.Column('physical_address', sa.Text(), nullable=False),
        sa.Column('date_of_enlistment', sa.Date(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=True),
        sa.Column('department', sa.String(length=255), nullable=True),
        sa.Column('supervisor_id', sa.UUID(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('badge_number', sa.String(length=50), nullable=True),
        sa.Column('firearm_serial', sa.String(length=100), nullable=True),
        sa.Column('last_promotion_date', sa.Date(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['supervisor_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('national_id'),
        sa.UniqueConstraint('service_number')
    )
    op.create_index(op.f('ix_police_officers_id'), 'police_officers', ['id'], unique=False)
    
    
    op.create_foreign_key('fk_station_ocs', 'police_stations', 'police_officers', ['ocs_id'], ['id'], use_alter=True)
    
    
    op.create_table('projects',
        sa.Column('project_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('objectives', sa.Text(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('budget', sa.Float(), nullable=False),
        sa.Column('funding_source', sa.String(length=255), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('beneficiaries', sa.Text(), nullable=False),
        sa.Column('key_deliverables', sa.Text(), nullable=False),
        sa.Column('risks', sa.Text(), nullable=True),
        sa.Column('mitigation_measures', sa.Text(), nullable=True),
        sa.Column('progress', sa.Integer(), nullable=False),
        sa.Column('project_manager_id', sa.UUID(), nullable=False),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['project_manager_id'], ['employees.id'], name='fk_project_manager', use_alter=True),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('project_number')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    
    
    op.create_table('government_policies',
        sa.Column('policy_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('objectives', sa.Text(), nullable=False),
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('expiry_date', sa.Date(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('target_audience', sa.Text(), nullable=False),
        sa.Column('implementation_strategy', sa.Text(), nullable=False),
        sa.Column('monitoring_framework', sa.Text(), nullable=False),
        sa.Column('evaluation_criteria', sa.Text(), nullable=False),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('author_id', sa.UUID(), nullable=False),
        sa.Column('approved_by', sa.UUID(), nullable=True),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], name='fk_policy_approver', use_alter=True),
        sa.ForeignKeyConstraint(['author_id'], ['employees.id'], name='fk_policy_author', use_alter=True),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('policy_number')
    )
    op.create_index(op.f('ix_government_policies_id'), 'government_policies', ['id'], unique=False)
    
    
    op.create_table('allowances',
        sa.Column('allowance_type', sa.Enum('HOUSING', 'TRANSPORT', 'MEAL', 'TELEPHONE', 'HARDSHIP', 'ENTERTAINMENT', 'RESPONSIBILITY', 'OTHER', name='allowancetype'), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('frequency', sa.String(length=50), nullable=False),
        sa.Column('taxable', sa.Boolean(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_allowances_id'), 'allowances', ['id'], unique=False)
    
    op.create_table('attendances',
        sa.Column('current_date', sa.Date(), nullable=False),
        sa.Column('time_in', sa.Time(), nullable=True),
        sa.Column('time_out', sa.Time(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('hours_worked', sa.Float(), nullable=True),
        sa.Column('overtime_hours', sa.Float(), nullable=True),
        sa.Column('remarks', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    
    op.create_table('benefits',
        sa.Column('benefit_type', sa.Enum('HEALTH_INSURANCE', 'LIFE_INSURANCE', 'PENSION', 'HOUSING', 'TRANSPORT', 'EDUCATION', 'OTHER', name='benefittype'), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('provider', sa.String(length=255), nullable=False),
        sa.Column('policy_number', sa.String(length=100), nullable=True),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('cost', sa.Float(), nullable=False),
        sa.Column('employer_contribution', sa.Float(), nullable=False),
        sa.Column('employee_contribution', sa.Float(), nullable=False),
        sa.Column('dependents_covered', sa.Boolean(), nullable=False),
        sa.Column('coverage_details', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_benefits_id'), 'benefits', ['id'], unique=False)
    
    op.create_table('education',
        sa.Column('institution', sa.String(length=255), nullable=False),
        sa.Column('level', sa.Enum('PRIMARY', 'SECONDARY', 'CERTIFICATE', 'DIPLOMA', 'BACHELORS', 'MASTERS', 'DOCTORATE', 'POSTDOCTORATE', name='educationlevel'), nullable=False),
        sa.Column('field_of_study', sa.String(length=255), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('is_completed', sa.Boolean(), nullable=False),
        sa.Column('grade', sa.String(length=50), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('certificate_number', sa.String(length=100), nullable=True),
        sa.Column('verification_status', sa.Boolean(), nullable=False),
        sa.Column('verified_by', sa.String(length=255), nullable=True),
        sa.Column('verification_date', sa.Date(), nullable=True),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_education_id'), 'education', ['id'], unique=False)
    
    op.create_table('employee_disciplinary_actions',
        sa.Column('action_type', sa.Enum('VERBAL_WARNING', 'WRITTEN_WARNING', 'FINAL_WARNING', 'SUSPENSION', 'DEMOTION', 'TERMINATION', name='disciplinarytype'), nullable=False),
        sa.Column('incident_date', sa.Date(), nullable=False),
        sa.Column('reported_date', sa.Date(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('violation', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'RESOLVED', 'APPEALED', 'CLOSED', name='disciplinarystatus'), nullable=False),
        sa.Column('action_taken', sa.Text(), nullable=False),
        sa.Column('action_date', sa.Date(), nullable=False),
        sa.Column('duration', sa.Integer(), nullable=True),
        sa.Column('initiated_by', sa.UUID(), nullable=False),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('employee_response', sa.Text(), nullable=True),
        sa.Column('resolution', sa.Text(), nullable=True),
        sa.Column('resolution_date', sa.Date(), nullable=True),
        sa.Column('appeal_filed', sa.Boolean(), nullable=False),
        sa.Column('appeal_date', sa.Date(), nullable=True),
        sa.Column('appeal_outcome', sa.Text(), nullable=True),
        sa.Column('documents', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['initiated_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_disciplinary_actions_id'), 'employee_disciplinary_actions', ['id'], unique=False)
    
    op.create_table('employee_emergency_contacts',
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('_relationship', sa.String(length=100), nullable=False),
        sa.Column('phone_number', sa.String(length=20), nullable=False),
        sa.Column('alternative_phone', sa.String(length=20), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('address', sa.Text(), nullable=True),
        sa.Column('is_primary', sa.Boolean(), nullable=False),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employee_emergency_contacts_id'), 'employee_emergency_contacts', ['id'], unique=False)
    
    op.create_table('employment_history',
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('reason_for_change', sa.Text(), nullable=True),
        sa.Column('change_type', sa.String(length=50), nullable=False),
        sa.Column('previous_salary', sa.Float(), nullable=True),
        sa.Column('new_salary', sa.Float(), nullable=True),
        sa.Column('approved_by', sa.String(length=255), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('position_id', sa.UUID(), nullable=False),
        sa.Column('previous_position_id', sa.UUID(), nullable=True),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('sub_county_id', sa.UUID(), nullable=True),
        sa.Column('ward_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['position_id'], ['positions.id'], ),
        sa.ForeignKeyConstraint(['previous_position_id'], ['positions.id'], ),
        sa.ForeignKeyConstraint(['sub_county_id'], ['sub_counties.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['ward_id'], ['wards.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employment_history_id'), 'employment_history', ['id'], unique=False)
    
    op.create_table('leaves',
        sa.Column('leave_type', sa.Enum('ANNUAL', 'SICK', 'MATERNITY', 'PATERNITY', 'COMPASSIONATE', 'STUDY', 'UNPAID', 'OTHER', name='leavetype'), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('total_days', sa.Integer(), nullable=False),
        sa.Column('reason', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', 'COMPLETED', name='leavestatus'), nullable=False),
        sa.Column('application_date', sa.Date(), nullable=False),
        sa.Column('approved_by', sa.UUID(), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('rejection_reason', sa.Text(), nullable=True),
        sa.Column('cancellation_reason', sa.Text(), nullable=True),
        sa.Column('attachments', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_leaves_id'), 'leaves', ['id'], unique=False)
    
    op.create_table('performance_reviews',
        sa.Column('review_date', sa.Date(), nullable=False),
        sa.Column('review_period_start', sa.Date(), nullable=False),
        sa.Column('review_period_end', sa.Date(), nullable=False),
        sa.Column('overall_rating', sa.Enum('EXCELLENT', 'GOOD', 'SATISFACTORY', 'NEEDS_IMPROVEMENT', 'UNSATISFACTORY', name='performancerating'), nullable=False),
        sa.Column('strengths', sa.Text(), nullable=True),
        sa.Column('areas_for_improvement', sa.Text(), nullable=True),
        sa.Column('reviewer_comments', sa.Text(), nullable=True),
        sa.Column('employee_comments', sa.Text(), nullable=True),
        sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'UNDER_REVIEW', 'COMPLETED', 'ACKNOWLEDGED', 'DISPUTED', 'REVISED', name='reviewstatus'), nullable=False),
        sa.Column('submission_date', sa.Date(), nullable=True),
        sa.Column('completion_date', sa.Date(), nullable=True),
        sa.Column('acknowledgment_date', sa.Date(), nullable=True),
        sa.Column('dispute_date', sa.Date(), nullable=True),
        sa.Column('dispute_reason', sa.Text(), nullable=True),
        sa.Column('dispute_resolution', sa.Text(), nullable=True),
        sa.Column('dispute_resolution_date', sa.Date(), nullable=True),
        sa.Column('next_review_date', sa.Date(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('reviewer_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['reviewer_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_reviews_id'), 'performance_reviews', ['id'], unique=False)
    
    op.create_table('performance_goals',
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('target_date', sa.Date(), nullable=False),
        sa.Column('completion_date', sa.Date(), nullable=True),
        sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='goalstatus'), nullable=False),
        sa.Column('priority', sa.Integer(), nullable=False),
        sa.Column('progress', sa.Integer(), nullable=False),
        sa.Column('measurement_criteria', sa.Text(), nullable=False),
        sa.Column('resources_required', sa.Text(), nullable=True),
        sa.Column('challenges', sa.Text(), nullable=True),
        sa.Column('achievements', sa.Text(), nullable=True),
        sa.Column('feedback', sa.Text(), nullable=True),
        sa.Column('linked_to_strategic_objective', sa.Boolean(), nullable=False),
        sa.Column('strategic_objective', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('supervisor_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['supervisor_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_goals_id'), 'performance_goals', ['id'], unique=False)
    
    op.create_table('qualifications',
        sa.Column('qualification_type', sa.Enum('ACADEMIC', 'PROFESSIONAL', 'TECHNICAL', 'CERTIFICATION', 'LICENSE', 'AWARD', name='qualificationtype'), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('institution', sa.String(length=255), nullable=False),
        sa.Column('date_obtained', sa.Date(), nullable=False),
        sa.Column('expiry_date', sa.Date(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('certificate_number', sa.String(length=100), nullable=True),
        sa.Column('verification_status', sa.Boolean(), nullable=False),
        sa.Column('verified_by', sa.String(length=255), nullable=True),
        sa.Column('verification_date', sa.Date(), nullable=True),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_qualifications_id'), 'qualifications', ['id'], unique=False)
    
    op.create_table('salaries',
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('basic_salary', sa.Float(), nullable=False),
        sa.Column('gross_salary', sa.Float(), nullable=False),
        sa.Column('net_salary', sa.Float(), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('payment_frequency', sa.String(length=50), nullable=False),
        sa.Column('tax_deductions', sa.Float(), nullable=False),
        sa.Column('pension_deductions', sa.Float(), nullable=False),
        sa.Column('health_insurance_deductions', sa.Float(), nullable=False),
        sa.Column('other_deductions', sa.Float(), nullable=False),
        sa.Column('allowances', sa.Float(), nullable=False),
        sa.Column('bonuses', sa.Float(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('approved_by', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_salaries_id'), 'salaries', ['id'], unique=False)
    
    op.create_table('trainings',
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('provider', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('status', sa.Enum('SCHEDULED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'DEFERRED', name='trainingstatus'), nullable=False),
        sa.Column('cost', sa.Float(), nullable=True),
        sa.Column('funded_by', sa.String(length=255), nullable=True),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('training_type', sa.String(length=100), nullable=False),
        sa.Column('skills_acquired', sa.Text(), nullable=True),
        sa.Column('certificate_issued', sa.Boolean(), nullable=False),
        sa.Column('certificate_number', sa.String(length=100), nullable=True),
        sa.Column('certificate_url', sa.String(length=255), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trainings_id'), 'trainings', ['id'], unique=False)
    
    
    op.create_table('api_keys',
        sa.Column('key_name', sa.String(length=100), nullable=False),
        sa.Column('key_value', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('created_date', sa.DateTime(), nullable=False),
        sa.Column('expiry_date', sa.DateTime(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('permissions', sa.Text(), nullable=False),
        sa.Column('rate_limit', sa.Integer(), nullable=False),
        sa.Column('last_used', sa.DateTime(), nullable=True),
        sa.Column('created_by', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key_value')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)

        
    op.create_table('login_attempts',
        sa.Column('username', sa.String(length=100), nullable=False),
        sa.Column('ip_address', sa.String(length=50), nullable=False),
        sa.Column('user_agent', sa.String(length=255), nullable=True),
        sa.Column('attempt_time', sa.DateTime(), nullable=False),
        sa.Column('status', sa.Enum('SUCCESS', 'FAILED', 'LOCKED', name='loginstatus'), nullable=False),
        sa.Column('failure_reason', sa.String(length=255), nullable=True),
        sa.Column('user_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_login_attempts_id'), 'login_attempts', ['id'], unique=False)
    
    op.create_table('permissions',
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('resource', sa.String(length=100), nullable=False),
        sa.Column('action', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    
    op.create_table('security_audits',
        sa.Column('audit_date', sa.DateTime(), nullable=False),
        sa.Column('audit_type', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('findings', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='auditstatus'), nullable=False),
        sa.Column('auditor', sa.String(length=255), nullable=False),
        sa.Column('affected_systems', sa.Text(), nullable=False),
        sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
        sa.Column('compliance_requirements', sa.Text(), nullable=True),
        sa.Column('remediation_plan', sa.Text(), nullable=True),
        sa.Column('remediation_deadline', sa.Date(), nullable=True),
        sa.Column('remediation_status', sa.String(length=100), nullable=True),
        sa.Column('remediation_date', sa.Date(), nullable=True),
        sa.Column('follow_up_audit_date', sa.Date(), nullable=True),
        sa.Column('follow_up_findings', sa.Text(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_audits_id'), 'security_audits', ['id'], unique=False)
    
    op.create_table('security_configurations',
        sa.Column('config_key', sa.String(length=100), nullable=False),
        sa.Column('config_value', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('last_updated', sa.DateTime(), nullable=False),
        sa.Column('updated_by', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('config_key')
    )
    op.create_index(op.f('ix_security_configurations_id'), 'security_configurations', ['id'], unique=False)
    
    op.create_table('security_incidents',
        sa.Column('incident_date', sa.DateTime(), nullable=False),
        sa.Column('incident_type', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='severitylevel'), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('reported_by', sa.UUID(), nullable=False),
        sa.Column('affected_systems', sa.Text(), nullable=False),
        sa.Column('affected_users', sa.Text(), nullable=True),
        sa.Column('impact', sa.Text(), nullable=False),
        sa.Column('resolution', sa.Text(), nullable=True),
        sa.Column('resolution_date', sa.DateTime(), nullable=True),
        sa.Column('resolved_by', sa.UUID(), nullable=True),
        sa.Column('investigation_notes', sa.Text(), nullable=True),
        sa.Column('preventive_measures', sa.Text(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['reported_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_security_incidents_id'), 'security_incidents', ['id'], unique=False)
    
    op.create_table('two_factor_authentications',
        sa.Column('method', sa.String(length=50), nullable=False),
        sa.Column('phone_number', sa.String(length=20), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('is_enabled', sa.Boolean(), nullable=False),
        sa.Column('last_verified', sa.DateTime(), nullable=True),
        sa.Column('backup_codes', sa.Text(), nullable=True),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_two_factor_authentications_id'), 'two_factor_authentications', ['id'], unique=False)
    
    op.create_table('user_activities',
        sa.Column('activity_time', sa.DateTime(), nullable=False),
        sa.Column('activity_type', sa.Enum('LOGIN', 'LOGOUT', 'CREATE', 'READ', 'UPDATE', 'DELETE', 'EXPORT', 'IMPORT', 'PRINT', 'DOWNLOAD', 'UPLOAD', 'APPROVE', 'REJECT', 'OTHER', name='activitytype'), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('ip_address', sa.String(length=50), nullable=False),
        sa.Column('user_agent', sa.String(length=255), nullable=True),
        sa.Column('resource', sa.String(length=255), nullable=False),
        sa.Column('resource_id', sa.String(length=255), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('details', sa.Text(), nullable=True),
        sa.Column('user_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activities_id'), 'user_activities', ['id'], unique=False)
    
    
    op.create_table('compliance_audits',
        sa.Column('audit_date', sa.Date(), nullable=False),
        sa.Column('audit_type', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('findings', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', name='auditstatus'), nullable=False),
        sa.Column('auditor', sa.String(length=255), nullable=False),
        sa.Column('auditee', sa.String(length=255), nullable=False),
        sa.Column('compliance_score', sa.Float(), nullable=True),
        sa.Column('non_compliance_issues', sa.Text(), nullable=True),
        sa.Column('action_plan', sa.Text(), nullable=True),
        sa.Column('action_deadline', sa.Date(), nullable=True),
        sa.Column('action_status', sa.String(length=100), nullable=True),
        sa.Column('action_completion_date', sa.Date(), nullable=True),
        sa.Column('follow_up_audit_date', sa.Date(), nullable=True),
        sa.Column('follow_up_findings', sa.Text(), nullable=True),
        sa.Column('requirement_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['requirement_id'], ['compliance_requirements.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_audits_id'), 'compliance_audits', ['id'], unique=False)
    
    op.create_table('compliance_reports',
        sa.Column('report_date', sa.Date(), nullable=False),
        sa.Column('report_period_start', sa.Date(), nullable=False),
        sa.Column('report_period_end', sa.Date(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('findings', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'REVIEWED', 'APPROVED', 'REJECTED', 'PUBLISHED', name='compliancestatus'), nullable=False),
        sa.Column('prepared_by', sa.String(length=255), nullable=False),
        sa.Column('reviewed_by', sa.String(length=255), nullable=True),
        sa.Column('approved_by', sa.String(length=255), nullable=True),
        sa.Column('submission_date', sa.Date(), nullable=True),
        sa.Column('review_date', sa.Date(), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('rejection_reason', sa.Text(), nullable=True),
        sa.Column('publication_date', sa.Date(), nullable=True),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('requirement_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['requirement_id'], ['compliance_requirements.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_compliance_reports_id'), 'compliance_reports', ['id'], unique=False)
    
    op.create_table('investigations',
        sa.Column('case_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'CLOSED', 'REOPENED', name='investigationstatus'), nullable=False),
        sa.Column('investigator', sa.String(length=255), nullable=False),
        sa.Column('findings', sa.Text(), nullable=True),
        sa.Column('recommendations', sa.Text(), nullable=True),
        sa.Column('action_taken', sa.Text(), nullable=True),
        sa.Column('action_date', sa.Date(), nullable=True),
        sa.Column('follow_up_required', sa.Boolean(), nullable=False),
        sa.Column('follow_up_date', sa.Date(), nullable=True),
        sa.Column('follow_up_notes', sa.Text(), nullable=True),
        sa.Column('documents', sa.Text(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('case_number')
    )
    op.create_index(op.f('ix_investigations_id'), 'investigations', ['id'], unique=False)
    
    op.create_table('policies',
        sa.Column('policy_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('policy_type', sa.String(length=100), nullable=False),
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('expiry_date', sa.Date(), nullable=True),
        sa.Column('version', sa.String(length=20), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('scope', sa.Text(), nullable=False),
        sa.Column('policy_statement', sa.Text(), nullable=False),
        sa.Column('responsibilities', sa.Text(), nullable=False),
        sa.Column('procedures', sa.Text(), nullable=False),
        sa.Column('compliance_requirements', sa.Text(), nullable=False),
        sa.Column('exceptions', sa.Text(), nullable=True),
        sa.Column('related_policies', sa.Text(), nullable=True),
        sa.Column('review_frequency', sa.String(length=50), nullable=False),
        sa.Column('last_review_date', sa.Date(), nullable=True),
        sa.Column('next_review_date', sa.Date(), nullable=True),
        sa.Column('approved_by', sa.String(length=255), nullable=False),
        sa.Column('approval_date', sa.Date(), nullable=False),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('policy_number')
    )
    op.create_index(op.f('ix_policies_id'), 'policies', ['id'], unique=False)
    
    op.create_table('regulations',
        sa.Column('regulation_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('regulation_type', sa.String(length=100), nullable=False),
        sa.Column('issuing_authority', sa.String(length=255), nullable=False),
        sa.Column('effective_date', sa.Date(), nullable=False),
        sa.Column('expiry_date', sa.Date(), nullable=True),
        sa.Column('jurisdiction', sa.String(length=100), nullable=False),
        sa.Column('scope', sa.Text(), nullable=False),
        sa.Column('requirements', sa.Text(), nullable=False),
        sa.Column('penalties', sa.Text(), nullable=True),
        sa.Column('compliance_deadline', sa.Date(), nullable=True),
        sa.Column('compliance_status', sa.String(length=50), nullable=False),
        sa.Column('compliance_notes', sa.Text(), nullable=True),
        sa.Column('related_regulations', sa.Text(), nullable=True),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('regulation_number')
    )
    op.create_index(op.f('ix_regulations_id'), 'regulations', ['id'], unique=False)
    
    op.create_table('risk_assessments',
        sa.Column('assessment_date', sa.Date(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('methodology', sa.Text(), nullable=False),
        sa.Column('scope', sa.Text(), nullable=False),
        sa.Column('assessor', sa.String(length=255), nullable=False),
        sa.Column('findings', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('overall_risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
        sa.Column('next_assessment_date', sa.Date(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_risk_assessments_id'), 'risk_assessments', ['id'], unique=False)
    
    op.create_table('risk_registers',
        sa.Column('risk_id', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('risk_category', sa.String(length=100), nullable=False),
        sa.Column('risk_owner', sa.String(length=255), nullable=False),
        sa.Column('identification_date', sa.Date(), nullable=False),
        sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
        sa.Column('likelihood', sa.Integer(), nullable=False),
        sa.Column('impact', sa.Integer(), nullable=False),
        sa.Column('inherent_risk_score', sa.Float(), nullable=False),
        sa.Column('existing_controls', sa.Text(), nullable=True),
        sa.Column('control_effectiveness', sa.Integer(), nullable=True),
        sa.Column('residual_risk_score', sa.Float(), nullable=True),
        sa.Column('risk_response', sa.String(length=50), nullable=False),
        sa.Column('mitigation_plan', sa.Text(), nullable=True),
        sa.Column('mitigation_owner', sa.String(length=255), nullable=True),
        sa.Column('mitigation_deadline', sa.Date(), nullable=True),
        sa.Column('mitigation_status', sa.String(length=50), nullable=True),
        sa.Column('mitigation_progress', sa.Integer(), nullable=True),
        sa.Column('last_review_date', sa.Date(), nullable=True),
        sa.Column('next_review_date', sa.Date(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('assessment_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['assessment_id'], ['risk_assessments.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('risk_id')
    )
    op.create_index(op.f('ix_risk_registers_id'), 'risk_registers', ['id'], unique=False)
    
    
    op.create_table('budgets',
        sa.Column('fiscal_year', sa.String(length=10), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=False),
        sa.Column('total_amount', sa.Float(), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('approved_by', sa.String(length=255), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budgets_id'), 'budgets', ['id'], unique=False)
    
    op.create_table('budget_items',
        sa.Column('item_name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('category', sa.String(length=100), nullable=False),
        sa.Column('subcategory', sa.String(length=100), nullable=True),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('unit_cost', sa.Float(), nullable=False),
        sa.Column('priority', sa.Integer(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('budget_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['budget_id'], ['budgets.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budget_items_id'), 'budget_items', ['id'], unique=False)
    
    op.create_table('expenditures',
        sa.Column('expenditure_date', sa.Date(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('category', sa.String(length=100), nullable=False),
        sa.Column('subcategory', sa.String(length=100), nullable=True),
        sa.Column('payment_method', sa.Enum('CASH', 'CHECK', 'BANK_TRANSFER', 'MOBILE_MONEY', 'CREDIT_CARD', 'OTHER', name='paymentmethod'), nullable=False),
        sa.Column('reference_number', sa.String(length=100), nullable=True),
        sa.Column('payee', sa.String(length=255), nullable=False),
        sa.Column('approved_by', sa.UUID(), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('receipt_url', sa.String(length=255), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('budget_item_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['budget_item_id'], ['budget_items.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenditures_id'), 'expenditures', ['id'], unique=False)
    
    op.create_table('financial_reports',
        sa.Column('report_date', sa.Date(), nullable=False),
        sa.Column('report_period_start', sa.Date(), nullable=False),
        sa.Column('report_period_end', sa.Date(), nullable=False),
        sa.Column('report_type', sa.String(length=100), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('total_income', sa.Float(), nullable=False),
        sa.Column('total_expenditure', sa.Float(), nullable=False),
        sa.Column('balance', sa.Float(), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('prepared_by', sa.UUID(), nullable=False),
        sa.Column('approved_by', sa.UUID(), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('document_url', sa.String(length=255), nullable=True),
        sa.Column('ministry_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('agency_id', sa.UUID(), nullable=True),
        sa.Column('county_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['agency_id'], ['agencies.id'], ),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['county_id'], ['counties.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['ministry_id'], ['ministries.id'], ),
        sa.ForeignKeyConstraint(['prepared_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_reports_id'), 'financial_reports', ['id'], unique=False)
    
    op.create_table('payments',
        sa.Column('payment_date', sa.Date(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('amount', sa.Float(), nullable=False),
        sa.Column('currency', sa.String(length=10), nullable=False),
        sa.Column('payment_method', sa.Enum('CASH', 'CHECK', 'BANK_TRANSFER', 'MOBILE_MONEY', 'CREDIT_CARD', 'OTHER', name='paymentmethod'), nullable=False),
        sa.Column('reference_number', sa.String(length=100), nullable=True),
        sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='paymentstatus'), nullable=False),
        sa.Column('transaction_type', sa.Enum('SALARY', 'ALLOWANCE', 'REIMBURSEMENT', 'ADVANCE', 'BONUS', 'DEDUCTION', 'OTHER', name='transactiontype'), nullable=False),
        sa.Column('payee', sa.String(length=255), nullable=False),
        sa.Column('payee_account', sa.String(length=100), nullable=True),
        sa.Column('payee_bank', sa.String(length=255), nullable=True),
        sa.Column('approved_by', sa.UUID(), nullable=True),
        sa.Column('approval_date', sa.Date(), nullable=True),
        sa.Column('receipt_url', sa.String(length=255), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['approved_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    
    
    op.create_table('police_complaints',
        sa.Column('complaint_number', sa.String(length=50), nullable=False),
        sa.Column('complainant_name', sa.String(length=255), nullable=False),
        sa.Column('complainant_contact', sa.String(length=100), nullable=False),
        sa.Column('complaint_date', sa.Date(), nullable=False),
        sa.Column('incident_date', sa.Date(), nullable=False),
        sa.Column('incident_location', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'UNDER_INVESTIGATION', 'RESOLVED', 'CLOSED', 'REOPENED', name='complaintstatus'), nullable=False),
        sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='complaintpriority'), nullable=False),
        sa.Column('resolution', sa.Text(), nullable=True),
        sa.Column('resolution_date', sa.Date(), nullable=True),
        sa.Column('feedback', sa.Text(), nullable=True),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('officer_id', sa.UUID(), nullable=True),
        sa.Column('assigned_to', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['assigned_to'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('complaint_number')
    )
    op.create_index(op.f('ix_police_complaints_id'), 'police_complaints', ['id'], unique=False)
    
    op.create_table('police_disciplinary_actions',
        sa.Column('action_type', sa.Enum('VERBAL_WARNING', 'WRITTEN_WARNING', 'SUSPENSION', 'DEMOTION', 'DISMISSAL', 'OTHER', name='disciplinaryactiontype'), nullable=False),
        sa.Column('incident_date', sa.Date(), nullable=False),
        sa.Column('reported_date', sa.Date(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('violation', sa.Text(), nullable=False),
        sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'RESOLVED', 'APPEALED', 'CLOSED', name='disciplinaryactionstatus'), nullable=False),
        sa.Column('action_taken', sa.Text(), nullable=False),
        sa.Column('action_date', sa.Date(), nullable=False),
        sa.Column('duration', sa.Integer(), nullable=True),
        sa.Column('initiated_by', sa.UUID(), nullable=False),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('officer_response', sa.Text(), nullable=True),
        sa.Column('resolution', sa.Text(), nullable=True),
        sa.Column('resolution_date', sa.Date(), nullable=True),
        sa.Column('appeal_filed', sa.Boolean(), nullable=False),
        sa.Column('appeal_date', sa.Date(), nullable=True),
        sa.Column('appeal_outcome', sa.Text(), nullable=True),
        sa.Column('documents', sa.Text(), nullable=True),
        sa.Column('officer_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['initiated_by'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_police_disciplinary_actions_id'), 'police_disciplinary_actions', ['id'], unique=False)
    
    op.create_table('police_investigations',
        sa.Column('case_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('start_date', sa.Date(), nullable=False),
        sa.Column('end_date', sa.Date(), nullable=True),
        sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'SUSPENDED', 'CLOSED', 'REOPENED', name='investigationstatus'), nullable=False),
        sa.Column('findings', sa.Text(), nullable=True),
        sa.Column('recommendations', sa.Text(), nullable=True),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('involved_parties', sa.Text(), nullable=False),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('evidence_collected', sa.Text(), nullable=True),
        sa.Column('lead_investigator_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('complaint_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['complaint_id'], ['police_complaints.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['lead_investigator_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('case_number')
    )
    op.create_index(op.f('ix_police_investigations_id'), 'police_investigations', ['id'], unique=False)
    
    op.create_table('evidence',
        sa.Column('evidence_number', sa.String(length=50), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('type', sa.Enum('PHYSICAL', 'DIGITAL', 'DOCUMENTARY', 'TESTIMONIAL', 'FORENSIC', 'OTHER', name='evidencetype'), nullable=False),
        sa.Column('collection_date', sa.Date(), nullable=False),
        sa.Column('collection_location', sa.String(length=255), nullable=False),
        sa.Column('collected_by', sa.UUID(), nullable=False),
        sa.Column('chain_of_custody', sa.Text(), nullable=False),
        sa.Column('storage_location', sa.String(length=255), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('investigation_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['collected_by'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['investigation_id'], ['police_investigations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('evidence_number')
    )
    op.create_index(op.f('ix_evidence_id'), 'evidence', ['id'], unique=False)
    
    op.create_table('incident_reports',
        sa.Column('incident_number', sa.String(length=50), nullable=False),
        sa.Column('incident_date', sa.DateTime(), nullable=False),
        sa.Column('report_date', sa.DateTime(), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('incident_type', sa.Enum('THEFT', 'ASSAULT', 'BURGLARY', 'ROBBERY', 'FRAUD', 'VANDALISM', 'TRAFFIC', 'DOMESTIC', 'OTHER', name='incidenttype'), nullable=False),
        sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='incidentseverity'), nullable=False),
        sa.Column('status', sa.Enum('REPORTED', 'UNDER_INVESTIGATION', 'RESOLVED', 'CLOSED', 'REOPENED', name='incidentstatus'), nullable=False),
        sa.Column('reporter_name', sa.String(length=255), nullable=False),
        sa.Column('reporter_contact', sa.String(length=100), nullable=False),
        sa.Column('reporter_address', sa.Text(), nullable=True),
        sa.Column('victims', sa.Text(), nullable=True),
        sa.Column('suspects', sa.Text(), nullable=True),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('evidence', sa.Text(), nullable=True),
        sa.Column('action_taken', sa.Text(), nullable=True),
        sa.Column('officer_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('investigation_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['investigation_id'], ['police_investigations.id'], ),
        sa.ForeignKeyConstraint(['officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('incident_number')
    )
    op.create_index(op.f('ix_incident_reports_id'), 'incident_reports', ['id'], unique=False)
    
    
    op.create_table('crime_reports',
        sa.Column('report_number', sa.String(length=50), nullable=False),
        sa.Column('crime_date', sa.DateTime(), nullable=False),
        sa.Column('report_date', sa.DateTime(), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('crime_type', sa.Enum('THEFT', 'ASSAULT', 'BURGLARY', 'ROBBERY', 'FRAUD', 'HOMICIDE', 'KIDNAPPING', 'SEXUAL_ASSAULT', 'DRUG_RELATED', 'CYBERCRIME', 'OTHER', name='crimetype'), nullable=False),
        sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='crimeseverity'), nullable=False),
        sa.Column('reporter_name', sa.String(length=255), nullable=False),
        sa.Column('reporter_contact', sa.String(length=100), nullable=False),
        sa.Column('reporter_address', sa.Text(), nullable=True),
        sa.Column('victims', sa.Text(), nullable=True),
        sa.Column('suspects', sa.Text(), nullable=True),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('evidence', sa.Text(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('assigned_officer_id', sa.UUID(), nullable=True),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['assigned_officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('report_number')
    )
    op.create_index(op.f('ix_crime_reports_id'), 'crime_reports', ['id'], unique=False)
    
    op.create_table('criminal_cases',
        sa.Column('case_number', sa.String(length=50), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('open_date', sa.Date(), nullable=False),
        sa.Column('close_date', sa.Date(), nullable=True),
        sa.Column('status', sa.Enum('OPEN', 'UNDER_INVESTIGATION', 'PENDING_TRIAL', 'CLOSED', 'REOPENED', 'SUSPENDED', name='casestatus'), nullable=False),
        sa.Column('crime_type', sa.Enum('THEFT', 'ASSAULT', 'BURGLARY', 'ROBBERY', 'FRAUD', 'HOMICIDE', 'KIDNAPPING', 'SEXUAL_ASSAULT', 'DRUG_RELATED', 'CYBERCRIME', 'OTHER', name='crimetype'), nullable=False),
        sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='crimeseverity'), nullable=False),
        sa.Column('location', sa.String(length=255), nullable=False),
        sa.Column('victims', sa.Text(), nullable=True),
        sa.Column('suspects', sa.Text(), nullable=True),
        sa.Column('witnesses', sa.Text(), nullable=True),
        sa.Column('evidence', sa.Text(), nullable=True),
        sa.Column('investigating_officer_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('report_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['investigating_officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['report_id'], ['crime_reports.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('case_number')
    )
    op.create_index(op.f('ix_criminal_cases_id'), 'criminal_cases', ['id'], unique=False)
    
    op.create_table('case_updates',
        sa.Column('update_date', sa.DateTime(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('status_change', sa.Boolean(), nullable=False),
        sa.Column('previous_status', sa.String(length=50), nullable=True),
        sa.Column('new_status', sa.String(length=50), nullable=True),
        sa.Column('action_taken', sa.Text(), nullable=True),
        sa.Column('next_steps', sa.Text(), nullable=True),
        sa.Column('officer_id', sa.UUID(), nullable=False),
        sa.Column('case_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['case_id'], ['criminal_cases.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_case_updates_id'), 'case_updates', ['id'], unique=False)
    
    op.create_table('missing_persons',
        sa.Column('report_number', sa.String(length=50), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('middle_name', sa.String(length=100), nullable=True),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('gender', sa.String(length=20), nullable=False),
        sa.Column('date_of_birth', sa.Date(), nullable=False),
        sa.Column('age', sa.Integer(), nullable=False),
        sa.Column('height', sa.Float(), nullable=True),
        sa.Column('weight', sa.Float(), nullable=True),
        sa.Column('eye_color', sa.String(length=50), nullable=True),
        sa.Column('hair_color', sa.String(length=50), nullable=True),
        sa.Column('distinguishing_features', sa.Text(), nullable=True),
        sa.Column('last_seen_date', sa.DateTime(), nullable=False),
        sa.Column('last_seen_location', sa.String(length=255), nullable=False),
        sa.Column('last_seen_wearing', sa.Text(), nullable=True),
        sa.Column('possible_destinations', sa.Text(), nullable=True),
        sa.Column('medical_conditions', sa.Text(), nullable=True),
        sa.Column('medications', sa.Text(), nullable=True),
        sa.Column('circumstances', sa.Text(), nullable=False),
        sa.Column('reporter_name', sa.String(length=255), nullable=False),
        sa.Column('reporter_contact', sa.String(length=100), nullable=False),
        sa.Column('reporter_relationship', sa.String(length=100), nullable=False),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('found_date', sa.DateTime(), nullable=True),
        sa.Column('found_location', sa.String(length=255), nullable=True),
        sa.Column('found_circumstances', sa.Text(), nullable=True),
        sa.Column('photo_url', sa.String(length=255), nullable=True),
        sa.Column('assigned_officer_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('case_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['assigned_officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['case_id'], ['criminal_cases.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('report_number')
    )
    op.create_index(op.f('ix_missing_persons_id'), 'missing_persons', ['id'], unique=False)
    
    op.create_table('wanted_persons',
        sa.Column('warrant_number', sa.String(length=50), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=False),
        sa.Column('middle_name', sa.String(length=100), nullable=True),
        sa.Column('last_name', sa.String(length=100), nullable=False),
        sa.Column('aliases', sa.Text(), nullable=True),
        sa.Column('gender', sa.String(length=20), nullable=False),
        sa.Column('date_of_birth', sa.Date(), nullable=True),
        sa.Column('age', sa.Integer(), nullable=True),
        sa.Column('height', sa.Float(), nullable=True),
        sa.Column('weight', sa.Float(), nullable=True),
        sa.Column('eye_color', sa.String(length=50), nullable=True),
        sa.Column('hair_color', sa.String(length=50), nullable=True),
        sa.Column('distinguishing_features', sa.Text(), nullable=True),
        sa.Column('last_known_location', sa.String(length=255), nullable=True),
        sa.Column('nationality', sa.String(length=100), nullable=True),
        sa.Column('charges', sa.Text(), nullable=False),
        sa.Column('warrant_issue_date', sa.Date(), nullable=False),
        sa.Column('warrant_expiry_date', sa.Date(), nullable=True),
        sa.Column('issuing_authority', sa.String(length=255), nullable=False),
        sa.Column('danger_level', sa.String(length=50), nullable=False),
        sa.Column('caution', sa.Text(), nullable=True),
        sa.Column('reward_amount', sa.Float(), nullable=True),
        sa.Column('status', sa.String(length=50), nullable=False),
        sa.Column('apprehended_date', sa.DateTime(), nullable=True),
        sa.Column('apprehended_location', sa.String(length=255), nullable=True),
        sa.Column('apprehended_by', sa.UUID(), nullable=True),
        sa.Column('photo_url', sa.String(length=255), nullable=True),
        sa.Column('assigned_officer_id', sa.UUID(), nullable=False),
        sa.Column('station_id', sa.UUID(), nullable=False),
        sa.Column('case_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['apprehended_by'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['assigned_officer_id'], ['police_officers.id'], ),
        sa.ForeignKeyConstraint(['case_id'], ['criminal_cases.id'], ),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['station_id'], ['police_stations.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('warrant_number')
    )
    op.create_index(op.f('ix_wanted_persons_id'), 'wanted_persons', ['id'], unique=False)
    
    
    op.create_table('department_performances',
        sa.Column('evaluation_date', sa.Date(), nullable=False),
        sa.Column('evaluation_period_start', sa.Date(), nullable=False),
        sa.Column('evaluation_period_end', sa.Date(), nullable=False),
        sa.Column('overall_rating', sa.Enum('EXCELLENT', 'GOOD', 'SATISFACTORY', 'NEEDS_IMPROVEMENT', 'UNSATISFACTORY', name='performancerating'), nullable=False),
        sa.Column('strengths', sa.Text(), nullable=True),
        sa.Column('areas_for_improvement', sa.Text(), nullable=True),
        sa.Column('key_achievements', sa.Text(), nullable=False),
        sa.Column('challenges_faced', sa.Text(), nullable=False),
        sa.Column('resource_utilization', sa.Text(), nullable=False),
        sa.Column('budget_compliance', sa.Text(), nullable=False),
        sa.Column('staff_performance', sa.Text(), nullable=False),
        sa.Column('service_delivery', sa.Text(), nullable=False),
        sa.Column('innovation', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('action_plan', sa.Text(), nullable=False),
        sa.Column('next_evaluation_date', sa.Date(), nullable=False),
        sa.Column('department_id', sa.UUID(), nullable=False),
        sa.Column('evaluated_by', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['evaluated_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_department_performances_id'), 'department_performances', ['id'], unique=False)
    
    op.create_table('performance_metrics',
        sa.Column('metric_name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('measurement_unit', sa.String(length=100), nullable=False),
        sa.Column('target_value', sa.Float(), nullable=False),
        sa.Column('actual_value', sa.Float(), nullable=True),
        sa.Column('measurement_date', sa.Date(), nullable=False),
        sa.Column('measurement_period_start', sa.Date(), nullable=False),
        sa.Column('measurement_period_end', sa.Date(), nullable=False),
        sa.Column('data_source', sa.String(length=255), nullable=False),
        sa.Column('calculation_method', sa.Text(), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('employee_id', sa.UUID(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=True),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_id'), 'performance_metrics', ['id'], unique=False)
    
    op.create_table('service_delivery_metrics',
        sa.Column('metric_name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('service_area', sa.String(length=255), nullable=False),
        sa.Column('measurement_unit', sa.String(length=100), nullable=False),
        sa.Column('target_value', sa.Float(), nullable=False),
        sa.Column('actual_value', sa.Float(), nullable=True),
        sa.Column('measurement_date', sa.Date(), nullable=False),
        sa.Column('measurement_period_start', sa.Date(), nullable=False),
        sa.Column('measurement_period_end', sa.Date(), nullable=False),
        sa.Column('data_source', sa.String(length=255), nullable=False),
        sa.Column('calculation_method', sa.Text(), nullable=False),
        sa.Column('citizen_satisfaction_score', sa.Float(), nullable=True),
        sa.Column('response_time', sa.Float(), nullable=True),
        sa.Column('service_quality_score', sa.Float(), nullable=True),
        sa.Column('accessibility_score', sa.Float(), nullable=True),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('department_id', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_delivery_metrics_id'), 'service_delivery_metrics', ['id'], unique=False)
    
    op.create_table('team_performances',
        sa.Column('evaluation_date', sa.Date(), nullable=False),
        sa.Column('evaluation_period_start', sa.Date(), nullable=False),
        sa.Column('evaluation_period_end', sa.Date(), nullable=False),
        sa.Column('team_name', sa.String(length=255), nullable=False),
        sa.Column('overall_rating', sa.Enum('EXCELLENT', 'GOOD', 'SATISFACTORY', 'NEEDS_IMPROVEMENT', 'UNSATISFACTORY', name='performancerating'), nullable=False),
        sa.Column('strengths', sa.Text(), nullable=True),
        sa.Column('areas_for_improvement', sa.Text(), nullable=True),
        sa.Column('key_achievements', sa.Text(), nullable=False),
        sa.Column('challenges_faced', sa.Text(), nullable=False),
        sa.Column('team_dynamics', sa.Text(), nullable=False),
        sa.Column('collaboration', sa.Text(), nullable=False),
        sa.Column('productivity', sa.Text(), nullable=False),
        sa.Column('quality_of_work', sa.Text(), nullable=False),
        sa.Column('innovation', sa.Text(), nullable=False),
        sa.Column('recommendations', sa.Text(), nullable=False),
        sa.Column('action_plan', sa.Text(), nullable=False),
        sa.Column('next_evaluation_date', sa.Date(), nullable=False),
        sa.Column('department_id', sa.UUID(), nullable=False),
        sa.Column('team_lead_id', sa.UUID(), nullable=False),
        sa.Column('evaluated_by', sa.UUID(), nullable=False),
        sa.Column('id', sa.UUID(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=False),
        sa.Column('updated_at', sa.DateTime(), nullable=False),
        sa.Column('created_by', sa.UUID(), nullable=True),
        sa.Column('updated_by', sa.UUID(), nullable=True),
        sa.Column('is_deleted', sa.Boolean(), nullable=False),
        sa.Column('deleted_at', sa.DateTime(), nullable=True),
        sa.Column('deleted_by', sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], ),
        sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
        sa.ForeignKeyConstraint(['evaluated_by'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['team_lead_id'], ['employees.id'], ),
        sa.ForeignKeyConstraint(['updated_by'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_team_performances_id'), 'team_performances', ['id'], unique=False)
    

def downgrade() -> None:
    """Downgrade schema."""
    
    op.drop_index(op.f('ix_wanted_persons_id'), table_name='wanted_persons')
    op.drop_table('wanted_persons')
    op.drop_index(op.f('ix_police_disciplinary_actions_id'), table_name='police_disciplinary_actions')
    op.drop_table('police_disciplinary_actions')
    op.drop_index(op.f('ix_evidence_id'), table_name='evidence')
    op.drop_table('evidence')
    op.drop_index(op.f('ix_case_updates_id'), table_name='case_updates')
    op.drop_table('case_updates')
    op.drop_index(op.f('ix_police_investigations_id'), table_name='police_investigations')
    op.drop_table('police_investigations')
    op.drop_index(op.f('ix_criminal_cases_id'), table_name='criminal_cases')
    op.drop_table('criminal_cases')
    op.drop_index(op.f('ix_police_complaints_id'), table_name='police_complaints')
    op.drop_table('police_complaints')
    op.drop_index(op.f('ix_missing_persons_id'), table_name='missing_persons')
    op.drop_table('missing_persons')
    op.drop_index(op.f('ix_incident_reports_id'), table_name='incident_reports')
    op.drop_table('incident_reports')
    op.drop_index(op.f('ix_expenditures_id'), table_name='expenditures')
    op.drop_table('expenditures')
    op.drop_index(op.f('ix_crime_reports_id'), table_name='crime_reports')
    op.drop_table('crime_reports')
    op.drop_index(op.f('ix_budget_items_id'), table_name='budget_items')
    op.drop_table('budget_items')
    op.drop_index(op.f('ix_risk_registers_id'), table_name='risk_registers')
    op.drop_table('risk_registers')
    op.drop_index(op.f('ix_police_officers_id'), table_name='police_officers')
    op.drop_table('police_officers')
    op.drop_index(op.f('ix_performance_metrics_id'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_compliance_reports_id'), table_name='compliance_reports')
    op.drop_table('compliance_reports')
    op.drop_index(op.f('ix_budgets_id'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_user_activities_id'), table_name='user_activities')
    op.drop_table('user_activities')
    op.drop_index(op.f('ix_two_factor_authentications_id'), table_name='two_factor_authentications')
    op.drop_table('two_factor_authentications')
    op.drop_index(op.f('ix_trainings_id'), table_name='trainings')
    op.drop_table('trainings')
    op.drop_index(op.f('ix_team_performances_id'), table_name='team_performances')
    op.drop_table('team_performances')
    op.drop_index(op.f('ix_service_delivery_metrics_id'), table_name='service_delivery_metrics')
    op.drop_table('service_delivery_metrics')
    op.drop_index(op.f('ix_security_incidents_id'), table_name='security_incidents')
    op.drop_table('security_incidents')
    op.drop_index(op.f('ix_security_configurations_id'), table_name='security_configurations')
    op.drop_table('security_configurations')
    op.drop_index(op.f('ix_security_audits_id'), table_name='security_audits')
    op.drop_table('security_audits')
    op.drop_index(op.f('ix_salaries_id'), table_name='salaries')
    op.drop_table('salaries')
    op.drop_index(op.f('ix_risk_assessments_id'), table_name='risk_assessments')
    op.drop_table('risk_assessments')
    op.drop_index(op.f('ix_regulations_id'), table_name='regulations')
    op.drop_table('regulations')
    op.drop_index(op.f('ix_qualifications_id'), table_name='qualifications')
    op.drop_table('qualifications')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_policies_id'), table_name='policies')
    op.drop_table('policies')
    op.drop_index(op.f('ix_police_stations_id'), table_name='police_stations')
    op.drop_table('police_stations')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_performance_reviews_id'), table_name='performance_reviews')
    op.drop_table('performance_reviews')
    op.drop_index(op.f('ix_performance_goals_id'), table_name='performance_goals')
    op.drop_table('performance_goals')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_login_attempts_id'), table_name='login_attempts')
    op.drop_table('login_attempts')
    op.drop_index(op.f('ix_leaves_id'), table_name='leaves')
    op.drop_table('leaves')
    op.drop_index(op.f('ix_government_policies_id'), table_name='government_policies')
    op.drop_table('government_policies')
    op.drop_index(op.f('ix_financial_reports_id'), table_name='financial_reports')
    op.drop_table('financial_reports')
    op.drop_index(op.f('ix_employment_history_id'), table_name='employment_history')
    op.drop_table('employment_history')
    op.drop_index(op.f('ix_employee_emergency_contacts_id'), table_name='employee_emergency_contacts')
    op.drop_table('employee_emergency_contacts')
    op.drop_index(op.f('ix_employee_disciplinary_actions_id'), table_name='employee_disciplinary_actions')
    op.drop_table('employee_disciplinary_actions')
    op.drop_index(op.f('ix_education_id'), table_name='education')
    op.drop_table('education')
    op.drop_index(op.f('ix_divisions_id'), table_name='divisions')
    op.drop_table('divisions')
    op.drop_index(op.f('ix_department_performances_id'), table_name='department_performances')
    op.drop_table('department_performances')
    op.drop_index(op.f('ix_compliance_requirements_id'), table_name='compliance_requirements')
    op.drop_table('compliance_requirements')
    op.drop_index(op.f('ix_compliance_investigations_id'), table_name='compliance_investigations')
    op.drop_table('compliance_investigations')
    op.drop_index(op.f('ix_compliance_audits_id'), table_name='compliance_audits')
    op.drop_table('compliance_audits')
    op.drop_index(op.f('ix_benefits_id'), table_name='benefits')
    op.drop_table('benefits')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    op.drop_index(op.f('ix_allowances_id'), table_name='allowances')
    op.drop_table('allowances')
    op.drop_index(op.f('ix_wards_id'), table_name='wards')
    op.drop_table('wards')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sub_counties_id'), table_name='sub_counties')
    op.drop_table('sub_counties')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_ministries_id'), table_name='ministries')
    op.drop_table('ministries')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_counties_id'), table_name='counties')
    op.drop_table('counties')
    op.drop_index(op.f('ix_agencies_id'), table_name='agencies')
    op.drop_table('agencies')
    
